0 caf DEBUG actor0 139691143698176 caf.logger log_first_line logger.cpp:574 level = trace, node = invalid-node, component-blacklist = []
0 caf TRACE actor0 139691743127104 caf.group_manager init group_manager.cpp:465 ENTRY 
0 caf TRACE actor0 139691743127104 caf.$.local_group_module local_group_module group_manager.cpp:333 ENTRY 
0 caf TRACE actor0 139691743127104 caf.$.local_group_module operator() group_manager.cpp:333 EXIT
0 caf TRACE actor0 139691743127104 caf.group_manager operator() group_manager.cpp:465 EXIT
0 caf TRACE actor1 139691743127104 caf.detail.tick_emitter interval tick_emitter.cpp:50 ENTRY x = 5ms
0 caf TRACE actor1 139691743127104 caf.detail.tick_emitter operator() tick_emitter.cpp:50 EXIT
0 caf DEBUG actor1 139691743127104 caf.scheduled_actor scheduled_actor scheduled_actor.cpp:149 interval = 5ms max_batch_delay_ticks_ = 1 credit_round_ticks_ = 2
0 caf_flow DEBUG actor0 139691743127104 caf make_actor make_actor.hpp:46 SPAWN ; ID = 1 ; NAME = spawn_server ; TYPE = caf.stateful_actor ; ARGS = (actor_config(hidden_flag)) ; NODE = invalid-node ; GROUPS = []
0 caf TRACE actor1 139691743127104 caf.scheduled_actor launch scheduled_actor.cpp:211 ENTRY lazy = true hide = true
0 caf TRACE actor1 139691743127104 bool,%20bool)<GLOBAL operator() scheduled_actor.cpp:211 EXIT
0 caf TRACE actor2 139691743127104 caf.detail.tick_emitter interval tick_emitter.cpp:50 ENTRY x = 5ms
0 caf TRACE actor2 139691743127104 caf.detail.tick_emitter operator() tick_emitter.cpp:50 EXIT
0 caf DEBUG actor2 139691743127104 caf.scheduled_actor scheduled_actor scheduled_actor.cpp:149 interval = 5ms max_batch_delay_ticks_ = 1 credit_round_ticks_ = 2
0 caf_flow DEBUG actor0 139691743127104 caf make_actor make_actor.hpp:46 SPAWN ; ID = 2 ; NAME = config_server ; TYPE = caf.stateful_actor ; ARGS = (actor_config(hidden_flag)) ; NODE = invalid-node ; GROUPS = []
0 caf TRACE actor2 139691743127104 caf.scheduled_actor launch scheduled_actor.cpp:211 ENTRY lazy = true hide = true
0 caf TRACE actor2 139691743127104 bool,%20bool)<GLOBAL operator() scheduled_actor.cpp:211 EXIT
0 caf TRACE actor0 139691743127104 caf.scheduler.abstract_coordinator start abstract_coordinator.cpp:241 ENTRY 
0 caf_flow DEBUG actor0 139691743127104 caf make_actor make_actor.hpp:46 SPAWN ; ID = 3 ; NAME = printer_actor ; TYPE = caf.scheduler.ANON.printer_actor ; ARGS = (actor_config(detached_flag, hidden_flag)) ; NODE = invalid-node ; GROUPS = []
0 caf TRACE actor3 139691743127104 caf.blocking_actor launch blocking_actor.cpp:93 ENTRY hide = true
0 caf TRACE actor3 139691743127104 bool,%20bool)<GLOBAL operator() blocking_actor.cpp:93 EXIT
0 caf TRACE actor0 139691743127104 caf.scheduler.abstract_coordinator operator() abstract_coordinator.cpp:241 EXIT
0 caf TRACE actor0 139691743127104 caf.group_manager start group_manager.cpp:476 ENTRY 
0 caf TRACE actor0 139691743127104 caf.group_manager operator() group_manager.cpp:476 EXIT
0 caf TRACE actor3 139691152090880 caf.local_actor initialize local_actor.cpp:128 ENTRY id = 3 name = "printer_actor"
0 caf TRACE actor3 139691152090880 caf.local_actor operator() local_actor.cpp:128 EXIT
0 caf TRACE actor3 139691152090880 caf.blocking_actor receive_impl blocking_actor.cpp:231 ENTRY mid = message_id(1152921504606846976)
0 caf TRACE actor4 139691743127104 caf.detail.tick_emitter interval tick_emitter.cpp:50 ENTRY x = 5ms
0 caf TRACE actor4 139691743127104 caf.detail.tick_emitter operator() tick_emitter.cpp:50 EXIT
0 caf DEBUG actor4 139691743127104 caf.scheduled_actor scheduled_actor scheduled_actor.cpp:149 interval = 5ms max_batch_delay_ticks_ = 1 credit_round_ticks_ = 2
0 caf TRACE actor4 139691743127104 caf.scheduled_actor launch scheduled_actor.cpp:211 ENTRY lazy = false hide = false
0 caf DEBUG actor4 139691743127104 caf.actor_registry inc_running actor_registry.cpp:100 value = 1
0 caf TRACE actor4 139691743127104 bool,%20bool)<GLOBAL operator() scheduled_actor.cpp:211 EXIT
0 caf TRACE actor5 139691743127104 caf.detail.tick_emitter interval tick_emitter.cpp:50 ENTRY x = 5ms
0 caf TRACE actor5 139691743127104 caf.detail.tick_emitter operator() tick_emitter.cpp:50 EXIT
0 caf DEBUG actor5 139691743127104 caf.scheduled_actor scheduled_actor scheduled_actor.cpp:149 interval = 5ms max_batch_delay_ticks_ = 1 credit_round_ticks_ = 2
0 caf TRACE actor5 139691743127104 caf.scheduled_actor launch scheduled_actor.cpp:211 ENTRY lazy = false hide = false
0 caf DEBUG actor5 139691743127104 caf.actor_registry inc_running actor_registry.cpp:100 value = 2
0 caf TRACE actor5 139691743127104 bool,%20bool)<GLOBAL operator() scheduled_actor.cpp:211 EXIT
0 caf TRACE actor0 139691743127104 caf.actor_system ~actor_system actor_system.cpp:313 ENTRY 
0 caf DEBUG actor0 139691743127104 caf.actor_system ~actor_system actor_system.cpp:314 shutdown actor system
0 caf TRACE actor0 139691743127104 caf.actor_registry await_running_count_equal actor_registry.cpp:121 ENTRY expected = 0
0 caf DEBUG actor0 139691743127104 caf.actor_registry await_running_count_equal actor_registry.cpp:124 running_.load() = 2
0 caf TRACE actor4 139691734624000 caf.scheduled_actor resume scheduled_actor.cpp:388 ENTRY max_throughput = 18446744073709551615
0 caf TRACE actor4 139691734624000 caf.scheduled_actor activate scheduled_actor.cpp:738 ENTRY 
0 caf TRACE actor5 139691726231296 caf.scheduled_actor resume scheduled_actor.cpp:388 ENTRY max_throughput = 18446744073709551615
0 caf TRACE actor4 139691734624000 caf.event_based_actor initialize event_based_actor.cpp:35 ENTRY subtype = "caf.event_based_actor"
0 caf TRACE actor5 139691726231296 caf.scheduled_actor activate scheduled_actor.cpp:738 ENTRY 
0 caf TRACE actor4 139691734624000 caf.local_actor initialize local_actor.cpp:128 ENTRY id = 4 name = "scheduled_actor"
0 caf TRACE actor4 139691734624000 caf.local_actor operator() local_actor.cpp:128 EXIT
0 caf TRACE actor4 139691734624000 caf.event_based_actor make_behavior event_based_actor.cpp:50 ENTRY 
0 caf TRACE actor4 139691734624000 caf.event_based_actor operator() event_based_actor.cpp:50 EXIT
0 caf TRACE actor5 139691726231296 caf.event_based_actor initialize event_based_actor.cpp:35 ENTRY subtype = "caf.event_based_actor"
0 caf DEBUG actor4 139691734624000 caf.event_based_actor initialize event_based_actor.cpp:44 make_behavior() did return a valid behavior
0 caf TRACE actor5 139691726231296 caf.local_actor initialize local_actor.cpp:128 ENTRY id = 5 name = "scheduled_actor"
0 caf TRACE actor5 139691726231296 caf.local_actor operator() local_actor.cpp:128 EXIT
0 caf TRACE actor5 139691726231296 caf.event_based_actor make_behavior event_based_actor.cpp:50 ENTRY 
0 caf TRACE actor4 139691734624000 caf.scheduled_actor set_receive_timeout scheduled_actor.cpp:489 ENTRY 
0 caf TRACE actor4 139691734624000 caf.scheduled_actor operator() scheduled_actor.cpp:489 EXIT
0 caf TRACE actor4 139691734624000 caf.event_based_actor operator() event_based_actor.cpp:35 EXIT
0 caf TRACE actor4 139691734624000 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
0 caf TRACE actor4 139691734624000 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
0 caf DEBUG actor4 139691734624000 caf.scheduled_actor activate scheduled_actor.cpp:755 initialized actor: name() = "scheduled_actor"
0 caf TRACE actor4 139691734624000 caf.scheduled_actor operator() scheduled_actor.cpp:738 EXIT
0 caf DEBUG actor4 139691734624000 caf.scheduled_actor resume scheduled_actor.cpp:409 start new DRR round
0 caf TRACE actor4 139691734624000 size_t)<GLOBAL operator() scheduled_actor.cpp:388 EXIT
0 caf TRACE actor5 139691726231296 caf.scheduled_actor enqueue scheduled_actor.cpp:165 ENTRY *ptr = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe"))
0 caf_flow DEBUG actor5 139691726231296 caf.scheduled_actor enqueue scheduled_actor.cpp:166 SEND ; TO = 4@invalid-node ; FROM = 5@invalid-node ; STAGES = [] ; CONTENT = ("HiTheRe")
0 caf_flow DEBUG actor5 139691726231296 caf.scheduled_actor enqueue scheduled_actor.cpp:171 ACCEPT ; UNBLOCKED = true
0 caf TRACE actor5 139691726231296 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:165 EXIT
0 caf TRACE actor5 139691726231296 caf.local_actor request_response_timeout local_actor.cpp:63 ENTRY timeout = 9223372036854775807ns mid = message_id(1152921504606846977)
0 caf TRACE actor5 139691726231296 caf.message_id)<GLOBAL operator() local_actor.cpp:63 EXIT
0 caf TRACE actor5 139691726231296 caf.event_based_actor operator() event_based_actor.cpp:50 EXIT
0 caf DEBUG actor5 139691726231296 caf.event_based_actor initialize event_based_actor.cpp:40 make_behavior() did not return a behavior: alive = true
0 caf TRACE actor5 139691726231296 caf.event_based_actor operator() event_based_actor.cpp:35 EXIT
0 caf TRACE actor5 139691726231296 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
0 caf TRACE actor5 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
0 caf DEBUG actor5 139691726231296 caf.scheduled_actor activate scheduled_actor.cpp:755 initialized actor: name() = "scheduled_actor"
0 caf TRACE actor5 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:738 EXIT
0 caf DEBUG actor5 139691726231296 caf.scheduled_actor resume scheduled_actor.cpp:409 start new DRR round
0 caf TRACE actor5 139691726231296 size_t)<GLOBAL operator() scheduled_actor.cpp:388 EXIT
0 caf TRACE actor4 139691726231296 caf.scheduled_actor resume scheduled_actor.cpp:388 ENTRY max_throughput = 18446744073709551615
0 caf TRACE actor4 139691726231296 caf.scheduled_actor activate scheduled_actor.cpp:738 ENTRY 
0 caf TRACE actor4 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:738 EXIT
0 caf DEBUG actor4 139691726231296 caf.scheduled_actor resume scheduled_actor.cpp:409 start new DRR round
0 caf TRACE actor4 139691726231296 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:371 ENTRY x = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe")) handled_msgs = 0
0 caf TRACE actor4 139691726231296 caf.scheduled_actor reactivate scheduled_actor.cpp:781 ENTRY x = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe"))
0 caf TRACE actor4 139691726231296 caf.scheduled_actor consume scheduled_actor.cpp:639 ENTRY x = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe"))
0 caf_flow DEBUG actor4 139691726231296 caf.scheduled_actor consume scheduled_actor.cpp:641 RECEIVE ; FROM = 5@invalid-node ; STAGES = [] ; CONTENT = ("HiTheRe")
0 caf TRACE actor4 139691726231296 caf.scheduled_actor categorize scheduled_actor.cpp:558 ENTRY x = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe"))
0 caf TRACE actor4 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:558 EXIT
0 caf TRACE actor4 139691726231296 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = ("HITHERE")
0 caf DEBUG actor4 139691726231296 caf.detail.default_invoke_result_visitor<Self> deliver default_invoke_result_visitor.hpp:59 respond via response_promise
0 caf TRACE actor4 139691726231296 caf.response_promise deliver_impl response_promise.cpp:87 ENTRY msg = ("HITHERE")
0 caf TRACE actor4 139691726231296 caf.scheduled_actor enqueue scheduled_actor.cpp:165 ENTRY *ptr = mailbox_element(4@invalid-node, message_id(10376293541461622785), <unprintable>, ("HITHERE"))
0 caf_flow DEBUG actor4 139691726231296 caf.scheduled_actor enqueue scheduled_actor.cpp:166 SEND ; TO = 5@invalid-node ; FROM = 4@invalid-node ; STAGES = [] ; CONTENT = ("HITHERE")
0 caf_flow DEBUG actor4 139691726231296 caf.scheduled_actor enqueue scheduled_actor.cpp:171 ACCEPT ; UNBLOCKED = true
0 caf TRACE actor4 139691726231296 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:165 EXIT
0 caf TRACE actor4 139691726231296 caf.response_promise operator() response_promise.cpp:87 EXIT
0 caf TRACE actor4 139691726231296 [with%20Self%20=%20caf.scheduled_actor]<GLOBAL operator() default_invoke_result_visitor.hpp:48 EXIT
0 caf_flow DEBUG actor4 139691726231296 caf.scheduled_actor consume scheduled_actor.cpp:723 FINALIZE
0 caf TRACE actor4 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:639 EXIT
0 caf TRACE actor4 139691726231296 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
0 caf TRACE actor4 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
0 caf TRACE actor4 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:781 EXIT
0 caf TRACE actor4 139691726231296 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:371 EXIT
0 caf TRACE actor4 139691726231296 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
0 caf TRACE actor4 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
0 caf TRACE actor4 139691726231296 caf.scheduled_actor advance_streams scheduled_actor.cpp:1130 ENTRY 
0 caf DEBUG actor4 139691726231296 caf.scheduled_actor advance_streams scheduled_actor.cpp:1132 tick emitter not started yet
0 caf TRACE actor4 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:1130 EXIT
0 caf DEBUG actor4 139691726231296 caf.scheduled_actor resume scheduled_actor.cpp:409 start new DRR round
0 caf TRACE actor4 139691726231296 caf.scheduled_actor set_receive_timeout scheduled_actor.cpp:489 ENTRY 
0 caf TRACE actor4 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:489 EXIT
0 caf TRACE actor4 139691726231296 size_t)<GLOBAL operator() scheduled_actor.cpp:388 EXIT
0 caf TRACE actor5 139691726231296 caf.scheduled_actor resume scheduled_actor.cpp:388 ENTRY max_throughput = 18446744073709551615
0 caf TRACE actor5 139691726231296 caf.scheduled_actor activate scheduled_actor.cpp:738 ENTRY 
0 caf TRACE actor5 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:738 EXIT
0 caf DEBUG actor5 139691726231296 caf.scheduled_actor resume scheduled_actor.cpp:409 start new DRR round
0 caf TRACE actor5 139691726231296 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:371 ENTRY x = mailbox_element(4@invalid-node, message_id(10376293541461622785), <unprintable>, ("HITHERE")) handled_msgs = 0
0 caf TRACE actor5 139691726231296 caf.scheduled_actor reactivate scheduled_actor.cpp:781 ENTRY x = mailbox_element(4@invalid-node, message_id(10376293541461622785), <unprintable>, ("HITHERE"))
0 caf TRACE actor5 139691726231296 caf.scheduled_actor consume scheduled_actor.cpp:639 ENTRY x = mailbox_element(4@invalid-node, message_id(10376293541461622785), <unprintable>, ("HITHERE"))
0 caf_flow DEBUG actor5 139691726231296 caf.scheduled_actor consume scheduled_actor.cpp:641 RECEIVE ; FROM = 4@invalid-node ; STAGES = [] ; CONTENT = ("HITHERE")
0 caf TRACE actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, "test_actor_buddy_function: Got \""))
0 caf_flow DEBUG actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, "test_actor_buddy_function: Got \"")
0 caf_flow DEBUG actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
0 caf TRACE actor5 139691726231296 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
0 caf TRACE actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, "HITHERE"))
0 caf_flow DEBUG actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, "HITHERE")
0 caf_flow DEBUG actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
0 caf TRACE actor5 139691726231296 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
0 caf TRACE actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, ".
))
0 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, "test_actor_buddy_function: Got \""))
0 caf_flow DEBUG actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, ".
)
0 caf_flow DEBUG actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
0 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, "test_actor_buddy_function: Got \"")
0 caf TRACE actor5 139691726231296 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
0 caf_flow DEBUG actor5 139691726231296 caf.scheduled_actor consume scheduled_actor.cpp:723 FINALIZE
0 caf TRACE actor5 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:639 EXIT
0 caf TRACE actor5 139691726231296 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
0 caf DEBUG actor5 139691726231296 caf.scheduled_actor finalize scheduled_actor.cpp:859 actor has no behavior and is ready for cleanup
0 caf TRACE actor5 139691726231296 caf.scheduled_actor cleanup scheduled_actor.cpp:232 ENTRY fail_state = none
0 caf TRACE actor5 139691726231296 caf.local_actor cleanup local_actor.cpp:132 ENTRY fail_state = none
0 caf DEBUG actor5 139691726231296 caf.actor_registry dec_running actor_registry.cpp:116 new_val = 1
0 caf_flow DEBUG actor5 139691726231296 caf.local_actor cleanup local_actor.cpp:135 TERMINATE ; ID = 5 ; REASON = none ; NODE = invalid-node
0 caf TRACE actor5 139691726231296 caf.monitorable_actor cleanup monitorable_actor.cpp:79 ENTRY reason = none
0 caf DEBUG actor0 139691743127104 caf.actor_registry await_running_count_equal actor_registry.cpp:124 running_.load() = 1
0 caf DEBUG actor5 139691726231296 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 5 node() = invalid-node fail_state_ = none
0 caf TRACE actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::delete_atom(), 5))
0 caf_flow DEBUG actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::delete_atom(), 5)
0 caf_flow DEBUG actor5 139691726231296 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
0 caf TRACE actor5 139691726231296 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
0 caf TRACE actor5 139691726231296 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:79 EXIT
0 caf TRACE actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
0 caf DEBUG actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:70 suppress response message: invalid response promise
0 caf TRACE actor5 139691726231296 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:132 EXIT
0 caf TRACE actor3 139691152090880 [with%20Self%20=%20caf.blocking_actor]<GLOBAL operator() default_invoke_result_visitor.hpp:48 EXIT
0 caf TRACE actor5 139691726231296 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:232 EXIT
0 caf TRACE actor5 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
0 caf DEBUG actor5 139691726231296 caf.scheduled_actor reactivate scheduled_actor.cpp:799 actor finalized
0 caf TRACE actor5 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:781 EXIT
0 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:224 FINALIZE
0 caf TRACE actor5 139691726231296 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:371 EXIT
0 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
0 caf TRACE actor4 139691726231296 caf.scheduled_actor cleanup scheduled_actor.cpp:232 ENTRY fail_state = exit_reason(unreachable)
0 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, "HITHERE"))
0 caf TRACE actor4 139691726231296 caf.local_actor cleanup local_actor.cpp:132 ENTRY fail_state = exit_reason(unreachable)
0 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, "HITHERE")
0 caf DEBUG actor4 139691726231296 caf.actor_registry dec_running actor_registry.cpp:116 new_val = 0
0 caf_flow DEBUG actor4 139691726231296 caf.local_actor cleanup local_actor.cpp:135 TERMINATE ; ID = 4 ; REASON = exit_reason(unreachable) ; NODE = invalid-node
0 caf TRACE actor4 139691726231296 caf.monitorable_actor cleanup monitorable_actor.cpp:79 ENTRY reason = exit_reason(unreachable)
0 caf TRACE actor0 139691743127104 <GLOBALGLOBAL operator() actor_registry.cpp:121 EXIT
0 caf DEBUG actor4 139691726231296 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 4 node() = invalid-node fail_state_ = exit_reason(unreachable)
0 caf TRACE actor4 139691726231296 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:79 EXIT
0 caf TRACE actor0 139691743127104 caf anon_send_exit send.hpp:142 ENTRY dest = 1@invalid-node reason = user_shutdown
0 caf TRACE actor4 139691726231296 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:132 EXIT
0 caf TRACE actor4 139691726231296 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:232 EXIT
0 caf TRACE actor0 139691743127104 caf.scheduled_actor enqueue scheduled_actor.cpp:165 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown))))
0 caf TRACE actor5 139691726231296 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
0 caf TRACE actor5 139691726231296 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
0 caf TRACE actor5 139691726231296 size_t)<GLOBAL operator() scheduled_actor.cpp:388 EXIT
0 caf_flow DEBUG actor0 139691743127104 caf.scheduled_actor enqueue scheduled_actor.cpp:166 SEND ; TO = 1@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(1@invalid-node, exit_reason(user_shutdown)))
0 caf_flow DEBUG actor0 139691743127104 caf.scheduled_actor enqueue scheduled_actor.cpp:171 ACCEPT ; UNBLOCKED = true
0 caf TRACE actor0 139691743127104 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:165 EXIT
0 caf TRACE actor0 139691743127104 Dest&,%20caf.exit_reason)%20[with%20Dest%20=%20caf.intrusive_ptr<caf.actor_control_block>.]<GLOBAL operator() send.hpp:142 EXIT
0 caf TRACE actor0 139691743127104 caf anon_send_exit send.hpp:142 ENTRY dest = 2@invalid-node reason = user_shutdown
0 caf TRACE actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
0 caf TRACE actor0 139691743127104 caf.scheduled_actor enqueue scheduled_actor.cpp:165 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown))))
0 caf DEBUG actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:70 suppress response message: invalid response promise
0 caf TRACE actor1 139691717838592 caf.scheduled_actor resume scheduled_actor.cpp:388 ENTRY max_throughput = 18446744073709551615
1 caf TRACE actor1 139691717838592 caf.scheduled_actor activate scheduled_actor.cpp:738 ENTRY 
1 caf TRACE actor1 139691717838592 caf.event_based_actor initialize event_based_actor.cpp:35 ENTRY subtype = "caf.stateful_actor"
1 caf TRACE actor1 139691717838592 caf.local_actor initialize local_actor.cpp:128 ENTRY id = 1 name = "spawn_server"
0 caf TRACE actor3 139691152090880 [with%20Self%20=%20caf.blocking_actor]<GLOBAL operator() default_invoke_result_visitor.hpp:48 EXIT
1 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:224 FINALIZE
1 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
0 caf_flow DEBUG actor0 139691743127104 caf.scheduled_actor enqueue scheduled_actor.cpp:166 SEND ; TO = 2@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(2@invalid-node, exit_reason(user_shutdown)))
1 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, ".
))
1 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, ".
)
1 caf TRACE actor1 139691717838592 caf.local_actor operator() local_actor.cpp:128 EXIT
1 caf_flow DEBUG actor0 139691743127104 caf.scheduled_actor enqueue scheduled_actor.cpp:171 ACCEPT ; UNBLOCKED = true
1 caf TRACE actor0 139691743127104 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:165 EXIT
1 caf TRACE actor0 139691743127104 Dest&,%20caf.exit_reason)%20[with%20Dest%20=%20caf.intrusive_ptr<caf.actor_control_block>.]<GLOBAL operator() send.hpp:142 EXIT
1 caf TRACE actor0 139691743127104 caf.group_manager stop group_manager.cpp:480 ENTRY 
1 caf TRACE actor0 139691743127104 caf.$.local_group_module stop group_manager.cpp:415 ENTRY 
1 caf TRACE actor1 139691717838592 caf.event_based_actor make_behavior event_based_actor.cpp:50 ENTRY 
1 caf TRACE actor1 139691717838592 caf.$ spawn_serv_impl actor_system.cpp:157 ENTRY 
1 caf TRACE actor1 139691717838592 caf.$ operator() actor_system.cpp:157 EXIT
1 caf TRACE actor1 139691717838592 caf.event_based_actor operator() event_based_actor.cpp:50 EXIT
1 caf TRACE actor0 139691743127104 caf.$.local_group_module operator() group_manager.cpp:415 EXIT
1 caf TRACE actor0 139691743127104 caf.group_manager operator() group_manager.cpp:480 EXIT
1 caf TRACE actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
1 caf DEBUG actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:70 suppress response message: invalid response promise
1 caf DEBUG actor1 139691717838592 caf.event_based_actor initialize event_based_actor.cpp:44 make_behavior() did return a valid behavior
1 caf TRACE actor2 139691709445888 caf.scheduled_actor resume scheduled_actor.cpp:388 ENTRY max_throughput = 18446744073709551615
1 caf TRACE actor1 139691717838592 caf.scheduled_actor set_receive_timeout scheduled_actor.cpp:489 ENTRY 
1 caf TRACE actor3 139691152090880 [with%20Self%20=%20caf.blocking_actor]<GLOBAL operator() default_invoke_result_visitor.hpp:48 EXIT
1 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:489 EXIT
1 caf TRACE actor1 139691717838592 caf.event_based_actor operator() event_based_actor.cpp:35 EXIT
1 caf TRACE actor1 139691717838592 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
1 caf TRACE actor2 139691709445888 caf.scheduled_actor activate scheduled_actor.cpp:738 ENTRY 
1 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:224 FINALIZE
1 caf DEBUG actor0 139691743127104 caf.actor_system ~actor_system actor_system.cpp:332 stop module Scheduler
1 caf TRACE actor2 139691709445888 caf.event_based_actor initialize event_based_actor.cpp:35 ENTRY subtype = "caf.stateful_actor"
1 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
1 caf DEBUG actor1 139691717838592 caf.scheduled_actor activate scheduled_actor.cpp:755 initialized actor: name() = "spawn_server"
1 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:738 EXIT
1 caf DEBUG actor1 139691717838592 caf.scheduled_actor resume scheduled_actor.cpp:409 start new DRR round
1 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
1 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::delete_atom(), 5))
1 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::delete_atom(), 5)
1 caf TRACE actor2 139691709445888 caf.local_actor initialize local_actor.cpp:128 ENTRY id = 2 name = "config_server"
1 caf TRACE actor2 139691709445888 caf.local_actor operator() local_actor.cpp:128 EXIT
1 caf TRACE actor1 139691717838592 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:371 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown)))) handled_msgs = 0
1 caf TRACE actor2 139691709445888 caf.event_based_actor make_behavior event_based_actor.cpp:50 ENTRY 
1 caf TRACE actor2 139691709445888 caf.$ config_serv_impl actor_system.cpp:55 ENTRY 
1 caf TRACE actor1 139691717838592 caf.scheduled_actor reactivate scheduled_actor.cpp:781 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown))))
1 caf TRACE actor1 139691717838592 caf.scheduled_actor consume scheduled_actor.cpp:639 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown))))
1 caf_flow DEBUG actor1 139691717838592 caf.scheduled_actor consume scheduled_actor.cpp:641 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(1@invalid-node, exit_reason(user_shutdown)))
1 caf TRACE actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
1 caf TRACE actor2 139691709445888 caf.$ operator() actor_system.cpp:55 EXIT
1 caf DEBUG actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:70 suppress response message: invalid response promise
1 caf TRACE actor2 139691709445888 caf.event_based_actor operator() event_based_actor.cpp:50 EXIT
1 caf DEBUG actor2 139691709445888 caf.event_based_actor initialize event_based_actor.cpp:44 make_behavior() did return a valid behavior
1 caf TRACE actor3 139691152090880 [with%20Self%20=%20caf.blocking_actor]<GLOBAL operator() default_invoke_result_visitor.hpp:48 EXIT
1 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:224 FINALIZE
1 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
1 caf TRACE actor1 139691717838592 caf.scheduled_actor categorize scheduled_actor.cpp:558 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown))))
1 caf TRACE actor2 139691709445888 caf.scheduled_actor set_receive_timeout scheduled_actor.cpp:489 ENTRY 
1 caf TRACE actor1 139691717838592 caf.monitorable_actor unlink_from monitorable_actor.cpp:66 ENTRY x = 1@invalid-node
1 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:489 EXIT
1 caf TRACE actor2 139691709445888 caf.event_based_actor operator() event_based_actor.cpp:35 EXIT
1 caf TRACE actor2 139691709445888 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
1 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
1 caf TRACE actor1 139691717838592 caf.actor_addr&)<GLOBAL operator() monitorable_actor.cpp:66 EXIT
1 caf DEBUG actor2 139691709445888 caf.scheduled_actor activate scheduled_actor.cpp:755 initialized actor: name() = "config_server"
1 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:738 EXIT
1 caf TRACE actor1 139691717838592 caf.scheduled_actor quit scheduled_actor.cpp:443 ENTRY x = exit_reason(user_shutdown)
1 caf DEBUG actor2 139691709445888 caf.scheduled_actor resume scheduled_actor.cpp:409 start new DRR round
1 caf TRACE actor2 139691709445888 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:371 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown)))) handled_msgs = 0
1 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:443 EXIT
1 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:558 EXIT
1 caf DEBUG actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:691 handled system message
1 caf TRACE actor2 139691709445888 caf.scheduled_actor reactivate scheduled_actor.cpp:781 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown))))
1 caf_flow DEBUG actor1 139691717838592 caf.scheduled_actor consume scheduled_actor.cpp:723 FINALIZE
1 caf TRACE actor2 139691709445888 caf.scheduled_actor consume scheduled_actor.cpp:639 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown))))
1 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:639 EXIT
1 caf_flow DEBUG actor2 139691709445888 caf.scheduled_actor consume scheduled_actor.cpp:641 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(2@invalid-node, exit_reason(user_shutdown)))
1 caf TRACE actor1 139691717838592 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
1 caf DEBUG actor1 139691717838592 caf.scheduled_actor finalize scheduled_actor.cpp:859 actor has no behavior and is ready for cleanup
1 caf TRACE actor1 139691717838592 caf.scheduled_actor cleanup scheduled_actor.cpp:232 ENTRY fail_state = exit_reason(user_shutdown)
1 caf TRACE actor1 139691717838592 caf.local_actor cleanup local_actor.cpp:132 ENTRY fail_state = exit_reason(user_shutdown)
1 caf_flow DEBUG actor1 139691717838592 caf.local_actor cleanup local_actor.cpp:135 TERMINATE ; ID = 1 ; REASON = exit_reason(user_shutdown) ; NODE = invalid-node
1 caf TRACE actor2 139691709445888 caf.scheduled_actor categorize scheduled_actor.cpp:558 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown))))
1 caf TRACE actor1 139691717838592 caf.monitorable_actor cleanup monitorable_actor.cpp:79 ENTRY reason = exit_reason(user_shutdown)
1 caf TRACE actor2 139691709445888 caf.monitorable_actor unlink_from monitorable_actor.cpp:66 ENTRY x = 2@invalid-node
2 caf TRACE actor2 139691709445888 caf.actor_addr&)<GLOBAL operator() monitorable_actor.cpp:66 EXIT
2 caf DEBUG actor1 139691717838592 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 1 node() = invalid-node fail_state_ = exit_reason(user_shutdown)
2 caf TRACE actor1 139691717838592 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:79 EXIT
2 caf TRACE actor2 139691709445888 caf.scheduled_actor quit scheduled_actor.cpp:443 ENTRY x = exit_reason(user_shutdown)
2 caf TRACE actor1 139691717838592 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:132 EXIT
2 caf TRACE actor1 139691717838592 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:232 EXIT
2 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
2 caf DEBUG actor1 139691717838592 caf.scheduled_actor reactivate scheduled_actor.cpp:799 actor finalized
2 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:781 EXIT
2 caf TRACE actor1 139691717838592 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:371 EXIT
2 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:443 EXIT
2 caf TRACE actor1 139691717838592 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
2 caf TRACE actor1 139691717838592 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
2 caf TRACE actor1 139691717838592 size_t)<GLOBAL operator() scheduled_actor.cpp:388 EXIT
2 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:558 EXIT
2 caf DEBUG actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:691 handled system message
2 caf_flow DEBUG actor2 139691709445888 caf.scheduled_actor consume scheduled_actor.cpp:723 FINALIZE
2 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:639 EXIT
2 caf TRACE actor2 139691709445888 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
2 caf DEBUG actor2 139691709445888 caf.scheduled_actor finalize scheduled_actor.cpp:859 actor has no behavior and is ready for cleanup
2 caf TRACE actor2 139691709445888 caf.scheduled_actor cleanup scheduled_actor.cpp:232 ENTRY fail_state = exit_reason(user_shutdown)
2 caf TRACE actor2 139691709445888 caf.local_actor cleanup local_actor.cpp:132 ENTRY fail_state = exit_reason(user_shutdown)
2 caf_flow DEBUG actor2 139691709445888 caf.local_actor cleanup local_actor.cpp:135 TERMINATE ; ID = 2 ; REASON = exit_reason(user_shutdown) ; NODE = invalid-node
2 caf TRACE actor2 139691709445888 caf.monitorable_actor cleanup monitorable_actor.cpp:79 ENTRY reason = exit_reason(user_shutdown)
2 caf DEBUG actor2 139691709445888 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 2 node() = invalid-node fail_state_ = exit_reason(user_shutdown)
2 caf TRACE actor2 139691709445888 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:79 EXIT
2 caf TRACE actor2 139691709445888 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:132 EXIT
2 caf TRACE actor2 139691709445888 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:232 EXIT
2 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
2 caf DEBUG actor2 139691709445888 caf.scheduled_actor reactivate scheduled_actor.cpp:799 actor finalized
2 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:781 EXIT
2 caf TRACE actor2 139691709445888 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:371 EXIT
2 caf TRACE actor2 139691709445888 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
2 caf TRACE actor2 139691709445888 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
2 caf TRACE actor2 139691709445888 size_t)<GLOBAL operator() scheduled_actor.cpp:388 EXIT
2 caf TRACE actor0 139691743127104 caf.scheduler.abstract_coordinator stop_actors abstract_coordinator.cpp:262 ENTRY 
2 caf_flow DEBUG actor0 139691743127104 caf make_actor make_actor.hpp:46 SPAWN ; ID = 6 ; NAME = scoped_actor ; TYPE = caf.ANON.impl ; ARGS = (actor_config(detached_flag, hidden_flag)) ; NODE = invalid-node ; GROUPS = []
2 caf TRACE actor6 139691743127104 caf.$.impl launch scoped_actor.cpp:46 ENTRY hide = false
2 caf DEBUG actor6 139691743127104 caf.actor_registry inc_running actor_registry.cpp:100 value = 1
2 caf TRACE actor6 139691743127104 caf.local_actor initialize local_actor.cpp:128 ENTRY id = 6 name = "scoped_actor"
2 caf TRACE actor6 139691743127104 caf.local_actor operator() local_actor.cpp:128 EXIT
2 caf TRACE actor6 139691743127104 bool,%20bool)<GLOBAL operator() scoped_actor.cpp:46 EXIT
2 caf TRACE actor6 139691743127104 caf anon_send_exit send.hpp:142 ENTRY dest = 3@invalid-node reason = user_shutdown
2 caf TRACE actor6 139691743127104 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(3@invalid-node, exit_reason(user_shutdown))))
2 caf_flow DEBUG actor6 139691743127104 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(3@invalid-node, exit_reason(user_shutdown)))
2 caf_flow DEBUG actor6 139691743127104 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
2 caf TRACE actor6 139691743127104 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
2 caf TRACE actor6 139691743127104 Dest&,%20caf.exit_reason)%20[with%20Dest%20=%20caf.actor]<GLOBAL operator() send.hpp:142 EXIT
2 caf TRACE actor6 139691743127104 caf.monitorable_actor attach monitorable_actor.cpp:41 ENTRY 
2 caf TRACE actor6 139691743127104 caf.monitorable_actor operator() monitorable_actor.cpp:41 EXIT
2 caf TRACE actor6 139691743127104 caf.blocking_actor receive_impl blocking_actor.cpp:231 ENTRY mid = message_id(1152921504606846976)
2 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(3@invalid-node, exit_reason(user_shutdown))))
2 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(3@invalid-node, exit_reason(user_shutdown)))
2 caf TRACE actor3 139691152090880 caf.monitorable_actor unlink_from monitorable_actor.cpp:66 ENTRY x = 3@invalid-node
2 caf TRACE actor3 139691152090880 caf.actor_addr&)<GLOBAL operator() monitorable_actor.cpp:66 EXIT
2 caf TRACE actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
2 caf DEBUG actor3 139691152090880 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:70 suppress response message: invalid response promise
2 caf TRACE actor3 139691152090880 [with%20Self%20=%20caf.blocking_actor]<GLOBAL operator() default_invoke_result_visitor.hpp:48 EXIT
2 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:224 FINALIZE
2 caf TRACE actor3 139691152090880 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
2 caf TRACE actor3 139691152090880 caf.message_id,%20caf.detail.blocking_behavior&)<GLOBAL operator() blocking_actor.cpp:231 EXIT
2 caf TRACE actor3 139691152090880 caf.local_actor cleanup local_actor.cpp:132 ENTRY fail_state = exit_reason(user_shutdown)
2 caf_flow DEBUG actor3 139691152090880 caf.local_actor cleanup local_actor.cpp:135 TERMINATE ; ID = 3 ; REASON = exit_reason(user_shutdown) ; NODE = invalid-node
2 caf TRACE actor3 139691152090880 caf.monitorable_actor cleanup monitorable_actor.cpp:79 ENTRY reason = exit_reason(user_shutdown)
2 caf DEBUG actor3 139691152090880 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 3 node() = invalid-node fail_state_ = exit_reason(user_shutdown)
2 caf TRACE actor3 139691152090880 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::wait_for_atom()))
2 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 6@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::wait_for_atom())
2 caf_flow DEBUG actor3 139691152090880 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
2 caf TRACE actor3 139691152090880 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
2 caf TRACE actor3 139691152090880 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:79 EXIT
2 caf TRACE actor3 139691152090880 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:132 EXIT
2 caf TRACE actor6 139691743127104 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::wait_for_atom()))
2 caf_flow DEBUG actor6 139691743127104 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::wait_for_atom())
2 caf TRACE actor6 139691743127104 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
2 caf DEBUG actor6 139691743127104 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:70 suppress response message: invalid response promise
2 caf TRACE actor6 139691743127104 [with%20Self%20=%20caf.blocking_actor]<GLOBAL operator() default_invoke_result_visitor.hpp:48 EXIT
2 caf_flow DEBUG actor6 139691743127104 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:224 FINALIZE
2 caf TRACE actor6 139691743127104 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
2 caf TRACE actor6 139691743127104 caf.message_id,%20caf.detail.blocking_behavior&)<GLOBAL operator() blocking_actor.cpp:231 EXIT
2 caf TRACE actor6 139691743127104 caf.local_actor cleanup local_actor.cpp:132 ENTRY fail_state = none
2 caf DEBUG actor6 139691743127104 caf.actor_registry dec_running actor_registry.cpp:116 new_val = 0
2 caf_flow DEBUG actor6 139691743127104 caf.local_actor cleanup local_actor.cpp:135 TERMINATE ; ID = 6 ; REASON = none ; NODE = invalid-node
2 caf TRACE actor6 139691743127104 caf.monitorable_actor cleanup monitorable_actor.cpp:79 ENTRY reason = none
2 caf DEBUG actor6 139691743127104 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 6 node() = invalid-node fail_state_ = none
2 caf TRACE actor6 139691743127104 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:79 EXIT
2 caf TRACE actor6 139691743127104 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:132 EXIT
2 caf TRACE actor0 139691743127104 caf.scheduler.abstract_coordinator operator() abstract_coordinator.cpp:262 EXIT
2 caf TRACE actor0 139691743127104 caf.actor_system operator() actor_system.cpp:313 EXIT
3 caf DEBUG actor0 139691143698176 caf.logger log_last_line logger.cpp:594 
